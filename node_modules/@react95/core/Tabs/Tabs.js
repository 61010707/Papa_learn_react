"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Tab = _interopRequireDefault(require("./Tab"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Navbar = _styledComponents.default.ol.withConfig({
  displayName: "Tabs__Navbar",
  componentId: "sc-199x8qa-0"
})(["display:flex;padding:0;margin:0;"]);

var NavContainer = _styledComponents.default.div.withConfig({
  displayName: "Tabs__NavContainer",
  componentId: "sc-199x8qa-1"
})(["padding:12px;margin-left:1px;background-color:#c3c7cb;box-shadow:inset 0px 1px 0px 0px #ffffff,2px 1px 0 -1px #868a8e,1px 1px 0 0px #868a8e,0px 1px 0 0px #868a8e,2px 0px 0 -1px #000,2px 2px 0 0px #000,0px 2px 0 0px #000,0px 1px 0px 1px #ffffff,2px 0px 0 0px #000;"]);

NavContainer.displayName = 'NavContainer';

var If = function If(_ref) {
  var condition = _ref.condition,
      children = _ref.children;
  return condition && children;
};

var Tabs = function Tabs(_ref2) {
  var children = _ref2.children,
      style = _ref2.style,
      defaultActiveTab = _ref2.defaultActiveTab,
      onChange = _ref2.onChange;

  var firstTab = _react.default.Children.toArray(children)[0];

  var _useState = (0, _react.useState)(defaultActiveTab || firstTab.props.title),
      _useState2 = _slicedToArray(_useState, 2),
      activeTab = _useState2[0],
      setActiveTab = _useState2[1];

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Navbar, {
    style: style
  }, _react.default.Children.map(children, function (child) {
    var _child$props = child.props,
        title = _child$props.title,
        disabled = _child$props.disabled;
    return _react.default.createElement(_Tab.default, {
      key: title,
      title: title,
      activeTab: activeTab,
      onClick: !disabled && function () {
        if (onChange) {
          onChange(title);
        }

        setActiveTab(title);
      }
    });
  })), _react.default.createElement(NavContainer, {
    style: style
  }, _react.default.Children.map(children, function (child) {
    return _react.default.createElement(If, {
      condition: child.props.title === activeTab
    }, child.props.children);
  })));
};

Tabs.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
  // eslint-disable-next-line react/forbid-prop-types
  style: _propTypes.default.object,
  defaultActiveTab: _propTypes.default.string,
  onChange: _propTypes.default.func
};
Tabs.defaultProps = {
  children: [],
  style: {},
  defaultActiveTab: undefined,
  onChange: undefined
};
var _default = Tabs;
exports.default = _default;